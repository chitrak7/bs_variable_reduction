library(comprehenr)
library(matlib)
library(MASS)
OLSE <- function(X, y) {
  return(inv((t(X)%*%X))%*%(t(X)%*%y))
}

erf <- function(x) {
  return((pnorm(x*sqrt(2))-0.5)*2)
}

alpha_mle  <- function(y,z,n){
  return(sqrt((4/n)*sum(to_vec(for(i in 1:n) sinh(0.5*(y[i]-z[i]))^2))))
}

C <- function(x) {
  return(2 + 4/x^2 - ((sqrt(2*pi)/x^2))*(1-erf(sqrt(2/x^2)))*exp(2/x^2))
}

R <- function(y,z,n){
  return(to_vec(for(i in 1:n)(4/alpha^2)*(cosh(0.5*(y[i]-z[i]))*sinh(0.5*(y[i]-z[i]))) 
                - (1*sinh(0.5*(y[i]-z[i]))/cosh(0.5*(y[i]-z[i])))))
}

SGD <- function(X, y) {
  theta_hat = OLSE(X,y)
  alpha_hat <- alpha_mle(y, X%*%theta_hat, length(y))
  #print(theta_hat)
  for(i in 1:2){
    y <- X%*%theta_hat + (2/C(alpha_hat))*R(y,X%*%theta_hat, length(y))
    theta_hat = OLSE(X,y)
    print(alpha_hat)
    alpha_hat <- (alpha_hat + alpha_mle(y, X%*%theta_hat, length(y)))/2
  }
  return(list("theta"=theta_hat,"alpha"=alpha_hat))
}

n = 400
alpha = 0.5
p = 204
crvalue = 1
theta = c(c(1.5,5,3,2,-0.5), seq(0,0,length.out = 200))
set.seed(124)

X = matrix(nrow = 0, ncol = 205)
for(i in 1:n){
  X <- rbind(X,c(c(1),rnorm(p,0,4)))
}

initial_estimate <-function(X,y,delta) {
  idx_obs <- to_vec(for(i in 1:n) if(delta[i]==0) i)
  X_obs <- X[idx_obs,]
  y_obs <- y[idx_obs]
  return(SGD(X_obs, y_obs))
}

t <- exp(X%*%theta)
v <- rnorm(n,0,(0.25/(alpha^2)))
y <- log(to_vec(for(i in 1:n) t[i]*(1+2*(v[i]^2)+2*v[i]*sqrt(1+v[i]^2))))
c <- exp(crvalue + sqrt(2)*rnorm(n, 0, 1))
delta <- seq(0,0,length.out = n)

for (i in 1:n) {
  if(y[i]>=c[i]){
    y[i]=c[i]
    delta[i]=1
  }
}

res <- initial_estimate(X,y,delta)
